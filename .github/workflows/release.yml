name: Release
on:
  push:
    # branches:
    #   - main
jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      # - uses: AvadoDServer/ci-release-action@main
      #   with:
      #     rpcToken: ${{ secrets.RPC_TOKEN }}
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          if_no_artifact_found: fail
          name: cf850c7ea6c90a64845307666a68e46073040eb8.json
          path: ${{github.sha}}.json
          github_token: ${{github.token}}
      # - name: Download release.json
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: cf850c7ea6c90a64845307666a68e46073040eb8.json
      #     path: ${{github.sha}}.json
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: create json-file for release
        run: |
          PACKAGENAME=$(jq '.packageName' $GITHUB_SHA.json --raw-output)
          VERSION=$(jq '.version' $GITHUB_SHA.json --raw-output)
          IPFSHASH=$(jq '.ipfsHash' $GITHUB_SHA.json --raw-output)
          echo $PACKAGENAME $VERSION $IPFSHASH

      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16.15.0
      # - name: Install Avado SDK
      #   run: |
      #     npm i -g git+https://github.com/AvadoDServer/AVADOSDK.git
      # - uses: actions/checkout@v3
      # - name: Alias "docker compose" as docker-compose for avadosdk
      #   run: |
      #     sudo sh -c 'echo "docker compose --compatibility \"\$@\"" > /bin/docker-compose'
      #     sudo chmod +x /bin/docker-compose
      # - name: Build package
      #   run: avadosdk build --provider http://80.208.229.228:5001
      # - name: test vars
      #   run: find $GITHUB_WORKSPACE
      # - name: verify release json
      #   run: cat $GITHUB_SHA.json
      # - name: verify release json
      #   run: cat $GITHUB_WORKSPACE/$GITHUB_SHA.json
      # - name: Upload release info
      #   uses: actions/upload-artifact@v3
      #   with:
      #     if-no-files-found: error
      #     name: ${{github.sha}}.json
      #     path: ${{github.sha}}.json
